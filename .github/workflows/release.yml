name: Release

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  APP_NAME: helloworld2
  DEPLOYMENTS_PROJECT: olehmart
  DEPLOYMENTS_REPO_NAME: test-deployments
  DEPLOYMENTS_DEV_BRANCH: auto-deployment-dev
  DEPLOYMENTS_DEV_CONFIG_FOLDER: dev

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Installs Java
      - uses: actions/setup-java@v3
        with:
          distribution: 'microsoft'
          java-version: '17'

      # Makes prepare release script executable
      - run: chmod +x ./prepare-release.sh

      # Creates a new release
      - name: Release
        id: semantic-release
        uses: cycjimmy/semantic-release-action@v3
        with:
          extra_plugins: |
            @semantic-release/exec
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      new_release_version: ${{ steps.semantic-release.outputs.new_release_version }}

  triggerDeployment:
    name: Trigger Deployment
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # Installs python
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Installs dependencies
      - name: Install Python dependencies
        working-directory: '.github/scripts/deployment_trigger'
        run: pip install -r requirements.txt

      - name: Setup SSH Keys and known_hosts
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add - <<< "${{ secrets.SSH_DEPLOY_KEY }}"

      # Triggers deployment
      - name: Trigger deployment
        working-directory: '.github/scripts/deployment_trigger'
        run: python main.py
        env:
          APP_NAME: ${{ env.APP_NAME }}
          NEW_VERSION: ${{ needs.release.outputs.new_release_version }}
          DEPLOYMENTS_PROJECT: ${{ env.DEPLOYMENTS_PROJECT }}
          DEPLOYMENTS_REPO_NAME: ${{ env.DEPLOYMENTS_REPO_NAME }}
          DEPLOYMENTS_DEV_BRANCH: ${{ env.DEPLOYMENTS_DEV_BRANCH }}
          DEPLOYMENTS_DEV_CONFIG_FOLDER: ${{ env.DEPLOYMENTS_DEV_CONFIG_FOLDER }}
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
